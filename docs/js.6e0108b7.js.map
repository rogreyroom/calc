{"version":3,"sources":["js/modules/selectors.js","js/modules/variables.js","js/modules/getters.js","js/modules/setters.js","js/modules/calculator.js","js/modules/listeners.js","js/index.js"],"names":["scoreOperations","document","querySelector","score","operations","querySelectorAll","numbers","prevValue","currValue","currOperation","equalOperation","percentOperation","getCurrValue","vars","getPrevValue","getCurrOperation","getEqualOperation","getPercentOperation","setCurrValue","val","setPrevValue","setCurrOperation","setEqualOperation","setPercentOperation","parseToLocale","toLocaleString","computeValue","computedValue","GET_","toString","includes","parseFloat","replace","isNaN","SET_","toggleNegativeValue","clearAll","textContent","getNumber","number","getOperation","operation","updateDisplay","forEach","addEventListener","target","getAttribute"],"mappings":"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","file":"js.6e0108b7.js","sourceRoot":"../src","sourcesContent":["// All project html references\n\nexport const scoreOperations = document.querySelector('.score-operations--js')\nexport const score = document.querySelector('.score--js')\nexport const operations = document.querySelectorAll('[data-operation]')\nexport const numbers = document.querySelectorAll('[data-number]')\n","// All project global variables\n\nexport let prevValue = ''\nexport let currValue = ''\nexport let currOperation = null\nexport let equalOperation = false\nexport let percentOperation = false\n","// All project getters\n\nimport * as vars from './variables'\n\nexport const getCurrValue = () => {\n  return vars.currValue\n}\n\nexport const getPrevValue = () => {\n  return vars.prevValue\n}\n\nexport const getCurrOperation = () => {\n  return vars.currOperation\n}\n\nexport const getEqualOperation = () => {\n  return vars.equalOperation\n}\n\nexport const getPercentOperation = () => {\n  return vars.percentOperation\n}\n","// All project setters\n\nimport * as vars from './variables'\n\nexport const setCurrValue = (val) => {\n  return (vars.currValue = val)\n}\n\nexport const setPrevValue = (val) => {\n  return (vars.prevValue = val)\n}\n\nexport const setCurrOperation = (val) => {\n  return (vars.currOperation = val)\n}\n\nexport const setEqualOperation = (val) => {\n  return (vars.equalOperation = val)\n}\n\nexport const setPercentOperation = (val) => {\n  return (vars.percentOperation = val)\n}\n","// Project main module\nimport { score, scoreOperations } from './selectors'\nimport * as GET_ from './getters'\nimport * as SET_ from './setters'\n\n// Change value toLocaleString\nconst parseToLocale = (val) => {\n  // Parses number according to language-sensitive representation\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\n  return val.toLocaleString('pl-PL')\n}\n\n// Perform computation\nconst computeValue = () => {\n  let computedValue\n  const prevValue = GET_.getPrevValue().toString().includes(',')\n    ? parseFloat(GET_.getPrevValue().toString().replace(',', '.'))\n    : parseFloat(GET_.getPrevValue())\n\n  const currValue = GET_.getCurrValue().toString().includes(',')\n    ? parseFloat(GET_.getCurrValue().toString().replace(',', '.'))\n    : parseFloat(GET_.getCurrValue())\n\n  if (GET_.getCurrOperation() !== '%') {\n    if (isNaN(currValue) || isNaN(prevValue)) return\n  }\n\n  switch (GET_.getCurrOperation()) {\n    case '+':\n      computedValue = prevValue + currValue\n      break\n    case '-':\n      computedValue = prevValue - currValue\n      break\n    case '*':\n      computedValue = prevValue * currValue\n      break\n    case '/':\n      computedValue = prevValue / currValue\n      break\n    case '%':\n      computedValue = (currValue / 100) * 1\n      break\n    default:\n      return\n  }\n  SET_.setCurrValue(computedValue)\n  SET_.setCurrOperation(null)\n  SET_.setPrevValue('')\n}\n\n// Toggle current value between negative and positive value\nconst toggleNegativeValue = () => {\n  if (isNaN(parseFloat(GET_.getCurrValue()))) return\n  SET_.setCurrValue(parseFloat(GET_.getCurrValue().toString().replace(',', '.')) * -1)\n}\n\n// Clear all values\nconst clearAll = () => {\n  SET_.setPrevValue('')\n  SET_.setCurrValue('')\n  SET_.setCurrOperation(null)\n  SET_.setEqualOperation(false)\n  score.textContent = '0'\n  scoreOperations.textContent = ''\n}\n\n// Get button number value\nexport const getNumber = (number) => {\n  if (isNaN(number) && GET_.getCurrValue().includes(',')) return\n  if (score.textContent === '0' && number === ',') return SET_.setCurrValue(`${score.textContent}${number}`)\n  if (GET_.getCurrValue() === '0' && number === '0') return SET_.setCurrValue(`${number}`)\n  if (GET_.getPercentOperation()) {\n    SET_.setCurrValue('')\n    SET_.setPercentOperation(false)\n  }\n\n  SET_.setCurrValue(`${GET_.getCurrValue()}${number}`)\n}\n\n// Get button operation value\nexport const getOperation = (operation) => {\n  if (operation === 'C') return clearAll()\n  if (operation === '+/-') return toggleNegativeValue()\n  if (operation === '=') {\n    SET_.setEqualOperation(true)\n    return computeValue()\n  }\n  if (operation === '%') {\n    SET_.setPercentOperation(true)\n    SET_.setCurrOperation(operation)\n    if (GET_.getCurrValue() === '' && scoreOperations.textContent !== '') SET_.setCurrValue(scoreOperations.textContent)\n    return computeValue()\n  }\n  if (GET_.getCurrValue() === '' && GET_.getPrevValue() === '' && scoreOperations.textContent !== '')\n    scoreOperations.textContent = ''\n  if (GET_.getCurrValue() === '') return\n  if (GET_.getPrevValue() !== '') computeValue()\n\n  SET_.setCurrOperation(operation)\n  SET_.setPrevValue(GET_.getCurrValue())\n  SET_.setCurrValue('')\n}\n\n// Display values\nexport const updateDisplay = () => {\n  if (GET_.getCurrValue() === '') {\n    score.textContent = '0'\n  } else {\n    if (GET_.getEqualOperation()) {\n      scoreOperations.textContent = parseToLocale(GET_.getCurrValue())\n      score.textContent = parseToLocale(GET_.getCurrValue())\n      SET_.setCurrValue('')\n      SET_.setEqualOperation(false)\n    } else {\n      score.textContent = parseToLocale(GET_.getCurrValue())\n    }\n  }\n\n  if (GET_.getCurrOperation() != null) {\n    if (GET_.getPrevValue() !== '')\n      scoreOperations.textContent = `${parseToLocale(GET_.getPrevValue())} ${GET_.getCurrOperation()}`\n  } else {\n    SET_.setPrevValue('')\n  }\n}\n","// All project event listners\n\nimport { operations, numbers } from './selectors'\nimport { getNumber, getOperation, updateDisplay } from './calculator'\n\noperations.forEach((operation) =>\n  operation.addEventListener('click', ({ target }) => {\n    getOperation(target.getAttribute('data-operation'))\n    updateDisplay()\n  })\n)\nnumbers.forEach((number) =>\n  number.addEventListener('click', ({ target }) => {\n    getNumber(target.getAttribute('data-number'))\n    updateDisplay()\n  })\n)\n","import 'normalize.css'\n\nimport './modules/listeners'\n"]}